name: test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-js-fsst:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'encodings/fsst/js'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/Iron'
          cache: 'npm'
          cache-dependency-path: '**/**/**/package-lock.json'
      - run: npm ci
      - run: npm run test
  test-js-fastpfor:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'encodings/fastpfor/js'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/Iron'
          cache: 'npm'
          cache-dependency-path: '**/**/**/package-lock.json'
      - run: npm ci
      - run: npm run build
      - run: npm run test:unit
  test-java-converter:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    defaults:
      run:
        working-directory: 'converter/java'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: gradle/actions/setup-gradle@v3
      - name: Set gradle command
        shell: bash
        id: vars
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
              echo GRADLE_COMMAND=".\gradlew.bat" >> $GITHUB_OUTPUT
          else
              echo GRADLE_COMMAND="./gradlew" >> $GITHUB_OUTPUT
          fi
      - name: Java encoding tests
        run: ${GRADLE_COMMAND} test --tests "com.mlt.converter.encodings.*"
      - name: Vector tests
        run: ${GRADLE_COMMAND} test --tests "com.mlt.vector.*"
      - name: Decoding tests
        run: ${GRADLE_COMMAND} test --tests "com.mlt.decoder.MltDecoderTest"
